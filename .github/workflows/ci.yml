# We aim to always test with the latest stable Rust toolchain, however we pin to a specific version
# like 1.70. Note that we only specify MAJOR.MINOR and not PATCH so that bugfixes still come
# automatically. If the version specified here is no longer the latest stable version,
# then please feel free to submit a PR that adjusts it along with the potential clippy fixes.
env:
  RUST_STABLE_VER: "1.71" # In quotes because otherwise 1.70 would be interpreted as 1.7

name: CI

on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

jobs:
  rustfmt:
    runs-on: ubuntu-latest
    name: cargo fmt
    steps:
      - uses: actions/checkout@v3

      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_STABLE_VER }}
          components: rustfmt

      - name: cargo fmt
        run: cargo fmt --all --check

  test-stable:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
    name: cargo clippy + test
    steps:
      - uses: actions/checkout@v3

      - name: install additional linux dependencies
        run: |
          sudo apt update
          sudo apt install libwayland-dev libxkbcommon-x11-dev libx11-dev libpango1.0-dev
        if: contains(matrix.os, 'ubuntu')

      - name: install stable toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_STABLE_VER }}
          components: clippy

      - name: restore cache
        uses: Swatinem/rust-cache@v2

      - name: cargo clippy (no default features)
        run: cargo clippy --workspace --all-targets --no-default-features -- -D warnings
      
      - name: cargo clippy (default features)
        run: cargo clippy --workspace --all-targets -- -D warnings

      - name: cargo clippy (all features)
        run: cargo clippy --workspace --all-targets --all-features -- -D warnings

      - name: cargo test
        run: cargo test --workspace --all-features

#  test-stable-wasm:
#    runs-on: macOS-latest
#    name: cargo test (wasm32)
#    steps:
#      - uses: actions/checkout@v3
#
#      - name: install wasm-pack
#        uses: jetli/wasm-pack-action@v0.3.0
#        with:
#          version: latest
#
#      - name: install stable toolchain
#        uses: dtolnay/rust-toolchain@master
#        with:
#          toolchain: ${{ env.RUST_STABLE_VER }}
#          targets: wasm32-unknown-unknown
#          components: clippy
#
#      - name: restore cache
#        uses: Swatinem/rust-cache@v2
#
#      - name: cargo clippy glazier (wasm)
#        run: cargo clippy --all-targets --target wasm32-unknown-unknown -- -D warnings
#
#      # TODO: Find a way to make tests work. Until then the tests are merely compiled.
#      - name: cargo test compile glazier
#        run: cargo test --no-run --target wasm32-unknown-unknown

  docs:
    name: cargo doc
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macOS-latest, windows-2019, ubuntu-latest]
    steps:
      - uses: actions/checkout@v3

      - name: install additional linux dependencies
        run: |
          sudo apt update
          sudo apt install libwayland-dev libxkbcommon-x11-dev libx11-dev libpango1.0-dev
        if: contains(matrix.os, 'ubuntu')

      - name: install nightly toolchain
        uses: dtolnay/rust-toolchain@nightly

      - name: restore cache
        uses: Swatinem/rust-cache@v2

      - name: cargo doc
        run: cargo doc --workspace --all-features --no-deps --document-private-items -Zunstable-options -Zrustdoc-scrape-examples
