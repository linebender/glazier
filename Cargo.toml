[package]
name = "glazier"
version = "0.7.0"
license = "Apache-2.0"
authors = ["Raph Levien <raph.levien@gmail.com>"]
description = "Platform abstracting application shell used for druid toolkit."
repository = "https://github.com/linebender/druid"
readme = "README.md"
categories = ["os::macos-apis", "os::windows-apis", "gui"]
edition = "2021"

[package.metadata.docs.rs]
rustdoc-args = ["--cfg", "docsrs"]
default-target = "x86_64-pc-windows-msvc"

[features]
default = ["x11"]
gtk = ["cairo-rs", "gdk-sys", "glib-sys", "gtk-sys", "gtk-rs"]
x11 = [
    "ashpd",
    "bindgen",
    "futures",
    "nix",
    "pkg-config",
    "x11rb",
]
wayland = [
    "wayland-client",
    "wayland-protocols/client",
    "wayland-protocols/unstable_protocols",
    "nix",
    "cairo-sys-rs",
    "rand",
    "calloop",
    "wayland-cursor",
    "log",
    "im",
    "bindgen",
    "pkg-config",
]

# passing on all the image features. AVIF is not supported because it does not
# support decoding, and that's all we use `Image` for.
bmp = []
dds = []
dxt = []
farbfeld = []
gif = []
jpeg = []
png = []
ico = []
tiff = []
webp = []
tga = []
hdr = []
image_png = []
jpeg_rayon = []
pnm = []
serde = ["kurbo/serde"]

accesskit = [
    "dep:accesskit",
    "accesskit_macos",
    "accesskit_windows",
    "once_cell",
]

[dependencies]
# Moving forward, this version should align with the kurbo version in peniko.
kurbo = "0.9.0"

tracing = "0.1.22"
lazy_static = "1.4.0"
time = "0.3.0"
cfg-if = "1.0.0"
instant = { version = "0.1.6", features = ["wasm-bindgen"] }
anyhow = "1.0.32"
keyboard-types = { version = "0.6.2", default_features = false }

# Optional dependencies
image = { version = "0.24.4", optional = true, default_features = false }
raw-window-handle = { version = "0.5.0", default_features = false }
accesskit = { version = "0.9.0", optional = true }
once_cell = { version = "1", optional = true }

[target.'cfg(target_os="windows")'.dependencies]
scopeguard = "1.1.0"
wio = "0.2.2"
accesskit_windows = { version = "0.12.0", optional = true }

[target.'cfg(target_os="windows")'.dependencies.winapi]
version = "0.3.9"
features = ["d2d1_1", "dwrite", "winbase", "libloaderapi", "errhandlingapi", "winuser",
            "shellscalingapi", "shobjidl", "combaseapi", "synchapi", "dxgi1_3", "dcomp",
            "d3d11", "dwmapi", "wincon", "fileapi", "processenv", "winbase", "handleapi",
            "shellapi", "winnls"]

[target.'cfg(target_os="macos")'.dependencies]
block = "0.1.6"
cocoa = "0.24.0"
objc = "0.2.7"
core-graphics = "0.22.0"
foreign-types = "0.3.2"
bitflags = "1.2.1"
accesskit_macos = { version = "0.5.0", optional = true }

[target.'cfg(any(target_os = "freebsd", target_os="linux", target_os="openbsd"))'.dependencies]
ashpd = { version = "0.3.2", optional = true }
# TODO(x11/dependencies): only use feature "xcb" if using X11
cairo-rs = { version = "0.15.12", default_features = false, features = ["xcb"], optional = true }
cairo-sys-rs = { version = "0.15.1", default_features = false, optional = true }
futures = { version = "0.3.24", optional = true, features = ["executor"] }
gdk-sys = { version = "0.15.1", optional = true }
# `gtk` gets renamed to `gtk-rs` so that we can use `gtk` as the feature name.
gtk-rs = { version = "0.15.5", features = ["v3_22"], package = "gtk", optional = true }
glib-sys = { version = "0.15.10", optional = true }
gtk-sys = { version = "0.15.3", optional = true }
nix = { version = "0.25.0", optional = true }
x11rb = { version = "0.11.1", features = ["allow-unsafe-code", "present", "render", "randr", "xfixes", "xkb", "resource_manager", "cursor", "xinput"], optional = true }
wayland-client = { version = "0.29.5", optional = true }
wayland-protocols = { version = "0.29.5", optional = true }
wayland-cursor = { version = "0.29.5", optional = true }
rand = { version = "0.8.0", optional = true }
calloop = { version = "0.7.1", optional = true }
log = { version = "0.4.14", optional = true }
im = { version = "15.0.0", optional = true }

[target.'cfg(target_arch="wasm32")'.dependencies]
wasm-bindgen = "0.2.67"
js-sys = "0.3.44"

[target.'cfg(target_arch="wasm32")'.dependencies.web-sys]
version = "0.3.44"
features = ["Window", "MouseEvent", "CssStyleDeclaration", "WheelEvent", "KeyEvent", "KeyboardEvent", "Navigator"]

[dev-dependencies]
static_assertions = "1.1.0"
test-log = { version = "0.2.5", features = ["trace"], default-features = false }
tracing-subscriber = { version = "0.3.2", features = ["env-filter"] }
unicode-segmentation = "1.7.0"
vello = { git = "https://github.com/linebender/vello", rev = "5f59a2e8181a7d01f8753680676dd150b965728b" }
parley = { git = "https://github.com/dfrg/parley", rev = "e4276b4d1001a050c07121f95ca255c771e9a641" }
pollster = "0.2.5"
wgpu = "0.15.0"

[target.'cfg(any(target_os = "freebsd", target_os="linux", target_os="openbsd"))'.build-dependencies]
bindgen = { version = "0.60.1", optional = true }
pkg-config = { version = "0.3.25", optional = true }

[[example]]
name = "accesskit"
required-features = ["accesskit"]


[patch."https://github.com/dfrg/fount"]
fount = { git = "https://github.com/jneem/fount", rev = "361c76fecf813ebc64d2634d3df7bfb6089c6414" }
